// Code generated by go generate internal/cmd; DO NOT EDIT.
package metadata

import (
	"github.com/Xuanwo/storage/pkg/storageclass"
)

var _ storageclass.Type

// All available metadata.
const (
	ObjectMetaContentMD5   = "content-md5"
	ObjectMetaContentType  = "content-type"
	ObjectMetaETag         = "etag"
	ObjectMetaStorageClass = "storage-class"

	StorageMetaLocation = "location"

	StorageStatisticCount = "count"
	StorageStatisticSize  = "size"
)

// GetContentMD5 will get content-md5 value from metadata.
func (m ObjectMeta) GetContentMD5() (string, bool) {
	v, ok := m.m[ObjectMetaContentMD5]
	if !ok {
		return "", false
	}
	return v.(string), true
}

// MustGetcontent-md5 will get content-md5 value from metadata.
func (m ObjectMeta) MustGetContentMD5() string {
	return m.m[ObjectMetaContentMD5].(string)
}

// Setcontent-md5 will set content-md5 value into metadata.
func (m ObjectMeta) SetContentMD5(v string) ObjectMeta {
	m.m[ObjectMetaContentMD5] = v
	return m
}

// GetContentType will get content-type value from metadata.
func (m ObjectMeta) GetContentType() (string, bool) {
	v, ok := m.m[ObjectMetaContentType]
	if !ok {
		return "", false
	}
	return v.(string), true
}

// MustGetcontent-type will get content-type value from metadata.
func (m ObjectMeta) MustGetContentType() string {
	return m.m[ObjectMetaContentType].(string)
}

// Setcontent-type will set content-type value into metadata.
func (m ObjectMeta) SetContentType(v string) ObjectMeta {
	m.m[ObjectMetaContentType] = v
	return m
}

// GetETag will get etag value from metadata.
func (m ObjectMeta) GetETag() (string, bool) {
	v, ok := m.m[ObjectMetaETag]
	if !ok {
		return "", false
	}
	return v.(string), true
}

// MustGetetag will get etag value from metadata.
func (m ObjectMeta) MustGetETag() string {
	return m.m[ObjectMetaETag].(string)
}

// Setetag will set etag value into metadata.
func (m ObjectMeta) SetETag(v string) ObjectMeta {
	m.m[ObjectMetaETag] = v
	return m
}

// GetStorageClass will get storage-class value from metadata.
func (m ObjectMeta) GetStorageClass() (storageclass.Type, bool) {
	v, ok := m.m[ObjectMetaStorageClass]
	if !ok {
		return "", false
	}
	return v.(storageclass.Type), true
}

// MustGetstorage-class will get storage-class value from metadata.
func (m ObjectMeta) MustGetStorageClass() storageclass.Type {
	return m.m[ObjectMetaStorageClass].(storageclass.Type)
}

// Setstorage-class will set storage-class value into metadata.
func (m ObjectMeta) SetStorageClass(v storageclass.Type) ObjectMeta {
	m.m[ObjectMetaStorageClass] = v
	return m
}

// GetLocation will get location value from metadata.
func (m StorageMeta) GetLocation() (string, bool) {
	v, ok := m.m[StorageMetaLocation]
	if !ok {
		return "", false
	}
	return v.(string), true
}

// MustGetlocation will get location value from metadata.
func (m StorageMeta) MustGetLocation() string {
	return m.m[StorageMetaLocation].(string)
}

// Setlocation will set location value into metadata.
func (m StorageMeta) SetLocation(v string) StorageMeta {
	m.m[StorageMetaLocation] = v
	return m
}

// GetCount will get count value from metadata.
func (m StorageStatistic) GetCount() (int64, bool) {
	v, ok := m.m[StorageStatisticCount]
	if !ok {
		return 0, false
	}
	return v.(int64), true
}

// MustGetcount will get count value from metadata.
func (m StorageStatistic) MustGetCount() int64 {
	return m.m[StorageStatisticCount].(int64)
}

// Setcount will set count value into metadata.
func (m StorageStatistic) SetCount(v int64) StorageStatistic {
	m.m[StorageStatisticCount] = v
	return m
}

// GetSize will get size value from metadata.
func (m StorageStatistic) GetSize() (int64, bool) {
	v, ok := m.m[StorageStatisticSize]
	if !ok {
		return 0, false
	}
	return v.(int64), true
}

// MustGetsize will get size value from metadata.
func (m StorageStatistic) MustGetSize() int64 {
	return m.m[StorageStatisticSize].(int64)
}

// Setsize will set size value into metadata.
func (m StorageStatistic) SetSize(v int64) StorageStatistic {
	m.m[StorageStatisticSize] = v
	return m
}
