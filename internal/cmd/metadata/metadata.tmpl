// Code generated by go generate internal/cmd/metadata; DO NOT EDIT.
package metadata

{{- $serviceName := .Name | toPascal }}

// All available metadata.
const (
{{- range $k, $v := .Data }}
    {{ $serviceName }}{{ $v.Name }} = "{{ $k }}"
{{- end }}
)

{{- range $k, $v := .Data }}
// Get{{ $v.Name }} will get {{ $k }} value from metadata.
func (m {{ $serviceName }}) Get{{ $v.Name }}() ({{ $v.Type }}, bool)  {
    v, ok := m.m[{{ $serviceName }}{{ $v.Name }}]
    if !ok {
        return {{ $v.Type | zeroValue }}, false
    }
    return v.({{ $v.Type }}), true
}

// MustGet{{ $v.Name }} will get {{ $k }} value from metadata.
func (m {{ $serviceName }}) MustGet{{ $v.Name }}() {{ $v.Type }}  {
    return m.m[{{ $serviceName }}{{ $v.Name }}].({{ $v.Type }})
}

// Set{{ $v.Name }} will set {{ $k }} value into metadata.
func (m {{ $serviceName }}) Set{{ $v.Name }}(v {{ $v.Type }}) {{ $serviceName }} {
    m.m[{{ $serviceName }}{{ $v.Name }}] = v
    return m
}
{{- end }}
