// Code generated by go generate internal/cmd/metadata; DO NOT EDIT.
package metadata

// All available metadata.
const (
{{- range $k, $v := .Data }}
    {{ $k | camelCase }} = "{{ $k }}"
{{- end }}
)

{{- range $k, $v := .Data }}
// Get{{ $k | camelCase }} will get {{ $k }} value from metadata.
func (m Metadata) Get{{ $k | camelCase }}() ({{ $v }}, bool)  {
    v, ok := m[{{ $k | camelCase }}]
    if !ok {
        return {{ $v | zeroValue }}, false
    }
    return v.({{ $v }}), true
}

// MustGet{{ $k | camelCase }} will get {{ $k }} value from metadata.
func (m Metadata) MustGet{{ $k | camelCase }}() {{ $v }}  {
    return m[{{ $k | camelCase }}].({{ $v }})
}

// Set{{ $k | camelCase }} will set {{ $k }} value into metadata.
func (m Metadata) Set{{ $k | camelCase }}(v {{ $v }})  {
    m[{{ $k | camelCase }}] = v
}
{{- end }}
