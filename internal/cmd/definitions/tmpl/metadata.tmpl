// Code generated by go generate internal/cmd; DO NOT EDIT.
package metadata

import (
    "github.com/Xuanwo/storage/pkg/storageclass"
)

var _ storageclass.Type

// All available metadata.
const (
    {{- template "metadata_const" makeSlice "object_meta" .Metas.ObjectMeta }}
    {{- template "metadata_const" makeSlice "storage_meta" .Metas.StorageMeta }}
    {{- template "metadata_const" makeSlice "storage_statistic" .Metas.StorageStatistic }}
)

{{- template "metadata_body" makeSlice "object_meta" .Metas.ObjectMeta }}
{{- template "metadata_body" makeSlice "storage_meta" .Metas.StorageMeta }}
{{- template "metadata_body" makeSlice "storage_statistic" .Metas.StorageStatistic }}

{{define "metadata_const"}}
    {{- $name := index . 0}}
    {{- $data := index . 1}}
    {{- range $_, $v := $data }}
        {{- $pname := $v.Name | toPascal }}
        {{- if $v.DisplayName }}
            {{- $pname = $v.DisplayName }}
        {{- end }}
        {{ $name | toPascal }}{{ $pname }} = "{{ $v.Name }}"
    {{- end }}
{{end}}


{{define "metadata_body"}}
    {{- $name := index . 0}}
    {{- $data := index . 1}}

    {{ $serviceName := $name | toPascal }}
    {{- range $_, $v := $data }}
        {{ $pname := $v.Name | toPascal }}
        {{- if $v.DisplayName }}
            {{ $pname = $v.DisplayName }}
        {{- end }}
        // Get{{ $pname }} will get {{ $v.Name }} value from metadata.
        func (m {{ $serviceName }}) Get{{ $pname }}() ({{ $v.Type }}, bool)  {
        v, ok := m.m[{{ $serviceName }}{{ $pname }}]
        if !ok {
        {{- if $v.ZeroValue }}
            return {{ $v.ZeroValue }}, false
        {{- else }}
            return {{ $v.Type | zeroValue }}, false
        {{- end }}
        }
        return v.({{ $v.Type }}), true
        }

        // MustGet{{ $v.Name }} will get {{ $v.Name }} value from metadata.
        func (m {{ $serviceName }}) MustGet{{ $pname }}() {{ $v.Type }}  {
        return m.m[{{ $serviceName }}{{ $pname }}].({{ $v.Type }})
        }

        // Set{{ $v.Name }} will set {{ $v.Name }} value into metadata.
        func (m {{ $serviceName }}) Set{{ $pname }}(v {{ $v.Type }}) {{ $serviceName }} {
        m.m[{{ $serviceName }}{{ $pname }}] = v
        return m
        }
    {{- end }}
{{end}}