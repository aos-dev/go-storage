package main

import (
	"log"
	"os"
	"text/template"

	"github.com/Xuanwo/templateutils"

	"github.com/Xuanwo/storage/types"
)

func main() {
	const filePath = "pairs.go"

	f, err := os.Create(filePath)
	if err != nil {
		log.Fatal(err)
	}
	defer f.Close()

	err = tmpl.Execute(f, struct {
		Data map[string]string
	}{
		types.AvailablePairs,
	})
	if err != nil {
		log.Fatal(err)
	}
}

var tmpl = template.Must(template.New("").Funcs(templateutils.FuncMap()).Parse(`// Code generated by go generate internal/cmd/pairs_gen; DO NOT EDIT.
package types

import (
	"time"
)

// All available pairs.
const (
{{- range $k, $v := .Data }}
	{{ $k | camelCase }} = "{{ $k }}"
{{- end }}
)

{{- range $k, $v := .Data }}
// With{{ $k | camelCase }} will apply {{ $k }} value to Options
func With{{ $k | camelCase }}(v {{ $v }}) *Pair {
	return &Pair{
		Key: {{ $k | camelCase }},
		Value: v,
	}
}
{{- end }}
`))
